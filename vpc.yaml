AWSTemplateFormatVersion: 2010-09-09

# スタック作成時に手動で入力する項目
Parameters:
  VPCCiderBlock:
    Description: VPC CiderBlock ex) 10.0.0.0 -10.255.255.255
    Type: String
    AllowedPattern: \b(?:\d{1,3}\.){3}\d{1,3}\/(?:[0-9]|[1-2][0-9]|3[0-2])\b

  VPCName:
    Description: VPC Name
    Default: MyVPC
    Type: String


# スタックが作成するリソース
Resources:
#-----------------------------------------
# VPC
#-----------------------------------------
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCiderBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName

#-----------------------------------------
# subnet
#-----------------------------------------
  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: public-subnet

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: 10.0.2.0/24
      Tags:
        - Key: Name
          Value: private-subnet

#-----------------------------------------
# Internet Gateway
#-----------------------------------------
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: myIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway

  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: myRTB

  myRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

  routeTableAssocName:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref myRouteTable

#-----------------------------------------
# VPCエンドポイント
# プライベートサブネットのSSM接続に必要
#-----------------------------------------
  # VPCエンドポイント用のセキュリティグループ
  VPCEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the VPC endpoint
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: VPCEndpointSecurityGroup

  # SSMMessageのVPCエンドポイント
  SSMVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref myVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      SubnetIds:
        - !Ref privateSubnet
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: ssm-endpoint

  # SSMMessageのVPCエンドポイント
  SSMMessageVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref myVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      SubnetIds:
        - !Ref privateSubnet
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: ssmmsg-endpoint

  # EC2MessageのVPCエンドポイント
  EC2MessageVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref myVPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      SubnetIds:
        - !Ref privateSubnet
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: ec2msg-endpoint



Outputs:
#-----------------------------------------
# スタックの返り値を出力する部分
#-----------------------------------------
  publicSubnetID:
    Value: !Ref publicSubnet

  privateSubnetID:
    Value: !Ref privateSubnet

  VPCID:
    Value: !Ref myVPC